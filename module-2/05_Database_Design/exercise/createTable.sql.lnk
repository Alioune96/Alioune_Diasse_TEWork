DROP TABLE IF EXISTS members CASCADE;

CREATE TABLE members(
	member_id serial,
	last_name VARCHAR(50) NOT NULL,
	first_name VARCHAR(50) NOT NULL,
	email VARCHAR(100) NOT NULL,
	phone_number int NULL,
	date_of_birth date NOT NULL,
	flag boolean NOT NULL,
	
	CONSTRAINT pk_member_id PRIMARY KEY (member_id)
);

DROP TABLE IF EXISTS group_for CASCADE;
CREATE TABLE group_for (
	group_id serial,
	group_name VARCHAR (50) NOT NULL UNIQUE,

	CONSTRAINT pk_groupid PRIMARY KEY (group_id)
);

DROP TABLE IF EXISTS member_group CASCADE;
CREATE TABLE member_group (
	member_id int NOT NULL,
	group_id int NOT NULL,

	CONSTRAINT fk_memberid FOREIGN KEY (member_id) REFERENCES members(member_id),
	CONSTRAINT fk_groupid FOREIGN KEY (group_id) REFERENCES group_for(group_id),
	CONSTRAINT pk_membergroup PRIMARY KEY (member_id,group_id)
);


DROP TABLE IF EXISTS event CASCADE;
CREATE TABLE event (
	event_id serial,
	event_name VARCHAR (50) NOT NULL,
	event_description VARCHAR (50) NOT NULL,
	start_date date NOT NULL,
	start_time time NOT NULL,
	length_duration int CHECK (length_duration>30),
	group_host int NOT NULL,
	
	CONSTRAINT pk_eventid PRIMARY KEY (event_id),
	CONSTRAINT fk_grouph FOREIGN KEY (group_host) REFERENCES group_for(group_id)
	
);


DROP TABLE IF EXISTS attended_event CASCADE;
CREATE TABLE attended_event (
	event_id int NOT NULL,
	group_attended int NOT NULL ,
	member_attended int NOT NULL,
	
	CONSTRAINT fk_eventid FOREIGN KEY (event_id) REFERENCES event (event_id),
	CONSTRAINT fk_groupatte FOREIGN KEY (group_attended) REFERENCES group_for(group_id),
	CONSTRAINT fk_member FOREIGN KEY (member_attended) REFERENCES members (member_id),
	CONSTRAINT pk_attendedevenet PRIMARY KEY (event_id, group_attended,member_attended)

);